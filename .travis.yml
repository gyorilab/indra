language: python
python:
  - "2.7"
  - "3.5"
addons:
    apt:
        sources:
            - avsm
        packages:
            - ocaml-nox
            - opam
before_install:
  - sudo add-apt-repository --yes ppa:webupd8team/java
  - sudo apt-get update
  - if [[ "$TRAVIS_PYTHON_VERSION" == "2.7" ]]; then
      wget https://repo.continuum.io/miniconda/Miniconda2-4.3.21-Linux-x86_64.sh -O miniconda.sh -nv;
    else
      wget https://repo.continuum.io/miniconda/Miniconda3-4.3.21-Linux-x86_64.sh -O miniconda.sh -nv;
    fi
  - chmod +x miniconda.sh
  - bash miniconda.sh -b -p $HOME/miniconda
  - export PATH="/home/travis/miniconda/bin:$PATH"
    #- conda update --yes conda
  - conda install --yes python="$TRAVIS_PYTHON_VERSION" qt=4 numpy scipy sympy cython=0.23.5 nose lxml matplotlib=1.5.0 networkx
install:
  # INDRA dependencies
  - sudo apt-get install graphviz
  - sudo apt-get install oracle-java8-installer
  - sudo update-java-alternatives -s java-8-oracle
  - sudo apt-get install oracle-java8-set-default
  - export JAVA_HOME="/usr/lib/jvm/java-8-oracle/"
  - pip install pygraphviz jsonschema coverage python-coveralls boto3 pandas sqlalchemy psycopg2 pgcopy
  - pip install doctest-ignore-unicode
  - pip install git+https://github.com/pybel/pybel.git
  - wget http://sorger.med.harvard.edu/data/bachman/Phosphorylation_site_dataset.tsv --directory-prefix=indra/resources/ -nv
  # PySB and dependencies
  - wget "http://www.csb.pitt.edu/Faculty/Faeder/wp-content/uploads/2017/04/BioNetGen-2.2.6-stable_Linux.tar.gz" -O bionetgen.tar.gz -nv
  - tar xzf bionetgen.tar.gz
  - export BNGPATH=`pwd`/BioNetGen-2.2.6-stable
  - pip install git+https://github.com/pysb/pysb.git
  # Kappa
  # First install ocamlfind via opam (needed to build KaSim/KaSa)
  - opam init -a git://github.com/ocaml/opam-repository && eval $(opam config env)
  - opam install -y conf-which base-bytes
  - opam install -y ocamlbuild yojson
  # Install KaSim/KaSa
  - git clone https://github.com/Kappa-Dev/KaSim.git
  - cd KaSim
  # KaSim as of 5/1/2017
  - git checkout 0733210
  - make all
  - export KAPPAPATH=`pwd`
  - cd ../
  # Biopax/Paxtools dependencies
  - pip install jnius-indra
  # Install NDEx package
  - pip install ndex
  # Download a number of useful resource files for testing purposes
  #- wget http://geneontology.org/ontology/go.owl -P data/
  - git submodule update --remote
  - pip install .[machine]
  - cd indra/benchmarks/assembly_eval/batch4
  - wget http://sorger.med.harvard.edu/data/bachman/trips_reach_batch4.gz -nv
  - tar -xf trips_reach_batch4.gz
  - cd $TRAVIS_BUILD_DIR
  - wget http://sorger.med.harvard.edu/data/bachman/reach-82631d-biores-e9ee36.jar -nv
  - export REACHPATH=$TRAVIS_BUILD_DIR
before_script:
  # Enable plotting on fake display
  - "export DISPLAY=:99.0"
  - "sh -e /etc/init.d/xvfb start"
  - sleep 3
script:
  - export PYTHONPATH=$PYTHONPATH:$TRAVIS_BUILD_DIR
  - export CLASSPATH=$TRAVIS_BUILD_DIR/reach-82631d-biores-e9ee36.jar
  - export _JAVA_OPTIONS="-Xmx4g -Xms1g"
  # Run standard unit tests
  - cd $TRAVIS_BUILD_DIR
  - if [[ "$TRAVIS_PYTHON_VERSION" == "2.7" ]]; then
      export NOSE_IGNORE_FILES="manage_content.py,build_sample_set.py,_require_python3.py";
    fi
  - nosetests indra -v --with-doctest --with-doctest-ignore-unicode
        --with-coverage --cover-inclusive --cover-package=indra
  # Run NL model examples only when the environmental variable
  # RUN_NL_MODELS is set to true in the Travis build
  # NOTE: if blocks in Travis DO NOT FAIL even if there is
  # and error in one of the commands inside. Therefore passing
  # alone does not mean that all the operations inside were
  # successful. Rather, the log needs to be inspected and compared
  # to desired behavior.
  - |
    if [ $RUN_NL_MODELS == "true" ]; then
        cd $TRAVIS_BUILD_DIR/models
        python hello_indra.py
        cd $TRAVIS_BUILD_DIR/models/p53_model
        python run_p53_model.py noplot
        cd $TRAVIS_BUILD_DIR/models/braf_model
        python assemble_model.py
        cd $TRAVIS_BUILD_DIR/models/ras_pathway
        python run_ras_pathway.py trips
     fi
  # Run assembly benchmarks
  - cd $TRAVIS_BUILD_DIR/indra/benchmarks/assembly_eval/batch4
  - python run_combined.py
  - cd $TRAVIS_BUILD_DIR
after_success:
  coveralls
